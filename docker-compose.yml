version: "3"
services:
  gateway:
    image: libercom/pad-gateway:latest
    build: ./MangaStore.ApiGateway
    container_name: "gateway"
    depends_on:
      - postgres
      - mongodb
      - redis_db
    ports:
      - "8080:8080"
    restart: unless-stopped
    environment:
      - REDIS_CACHE=redis_cache:6379
      - REMOTE_REGISTRY_URL=http://service_discovery:8081/services
    networks:
      pad-net:

  service_discovery:
    image: libercom/pad-service-discovery:latest
    build: ./MangaStore.ServiceDiscovery
    container_name: "service_discovery"
    restart: unless-stopped
    ports:
      - "8081:8081"
    depends_on:
      - gateway
    networks:
      pad-net:

  manga_inventory1:
    image: libercom/pad-manga-inventory:latest
    build: ./MangaStore.Inventory
    container_name: "manga_inventory1"
    restart: unless-stopped
    ports:
      - "5000:5000"
    depends_on:
      - service_discovery
    environment:
      - ASPNETCORE_URLS=http://*:5000
      - ApiGatewayUrl=http://service_discovery:8081/inventory/register
      - CatalogServiceUrl=http://manga_catalog1:5002/api/mangas
      - BaseUrl=http://manga_inventory1:5000/api
      - ConnectionStrings__Default=Host=postgres_db:5432;Database=Inventory;Username=postgres;Password=Strongpassword1
    networks:
      pad-net:

  manga_inventory2:
    image: libercom/pad-manga-inventory:latest
    build: ./MangaStore.Inventory
    container_name: "manga_inventory2"
    restart: unless-stopped
    ports:
      - "5001:5001"
    depends_on:
      - service_discovery
    environment:
      - ASPNETCORE_URLS=http://*:5001
      - ApiGatewayUrl=http://service_discovery:8081/inventory/register
      - CatalogServiceUrl=http://manga_catalog2:5003/api/mangas
      - BaseUrl=http://manga_inventory2:5001/api
      - ConnectionStrings__Default=Host=postgres_db:5432;Database=Inventory;Username=postgres;Password=Strongpassword1
    networks:
      pad-net:

  manga_catalog1:
    image: libercom/pad-manga-catalog:latest
    build: ./MangaStore.Catalog
    container_name: "manga_catalog1"
    restart: unless-stopped
    ports:
      - "5002:5002"
    depends_on:
      - service_discovery
    environment:
      - ASPNETCORE_URLS=http://*:5002
      - ApiGatewayUrl=http://service_discovery:8081/catalog/register
      - InventoryServiceUrl=http://manga_inventory1:5000/api/stocks/sync
      - BaseUrl=http://manga_catalog1:5002/api
      - CatalogDatabase__ConnectionString=mongodb://mongo_db:27017
      - CatalogDatabase__DatabaseName=MangaStore
      - CatalogDatabase__MangasCollectionName=Mangas
    networks:
      pad-net:

  manga_catalog2:
    image: libercom/pad-manga-catalog:latest
    build: ./MangaStore.Catalog
    container_name: "manga_catalog2"
    restart: unless-stopped
    ports:
      - "5003:5003"
    depends_on:
      - service_discovery
    environment:
      - ASPNETCORE_URLS=http://*:5003
      - ApiGatewayUrl=http://service_discovery:8081/catalog/register
      - InventoryServiceUrl=http://manga_inventory2:5001/api/stocks/sync
      - BaseUrl=http://manga_catalog2:5003/api
      - CatalogDatabase__ConnectionString=mongodb://mongo_db:27017
      - CatalogDatabase__DatabaseName=MangaStore
      - CatalogDatabase__MangasCollectionName=Mangas
    networks:
      pad-net:

  redis_db:
    image: redis:latest
    container_name: "redis_cache"
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      pad-net:

  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Strongpassword1
      POSTGRES_DB: Inventory
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      pad-net:

  mongodb:
    image: mongo:latest
    container_name: mongo_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      pad-net:

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    depends_on:
      - gateway
    volumes:
      - ./Prometheus:/etc/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    networks:
      pad-net:

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
    networks:
      pad-net:

  loki:
    image: grafana/loki:latest
    container_name: loki
    depends_on:
      - gateway
    ports:
      - "3100:3100"
    networks:
      pad-net:

volumes:
  postgres_data:
  mongodb_data:
networks:
  pad-net:
